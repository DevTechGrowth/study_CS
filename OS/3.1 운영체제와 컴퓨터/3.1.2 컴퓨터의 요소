
## 3.1.2 컴퓨터의 요소
### CPU
CPU(Central Processing Unit)는 산술논리연산장치, 제어장치, 레지스터로 구성되어 있는 컴퓨터 장치이다.
- 인터럽트에 의해 단순히 메모리에 존재하는 명령어를 해석하여 실행하는 역할이다. (`단순한 일꾼!`)

> `관리자`역할을 하는 운영체제의 커널이 프로그램을 메모리에 올려 프로세스를 만들면 `일꾼`인 CPU가 처리한다.

### 제어 장치
제어장치(CU, Control Unit)는 프로세스 조작을 지시하는 CPU의 부품
- 입출력장치 간 통신을 제어하고 명령어들을 읽고 해석하며 데이터 처리를 위한 순서를 결정한다.

### 레지스터
레지스터는 CPU 안에 있는 매우 빠른 임시기억장치
- CPU와 직접 연결되어 있어 연산 속도가 메모리보다 수십 배에서 수백 배까지 빠르다.
- CPU는 자체적으로 데이터를 저장할 방법이 없기에 레지스터를 거쳐 데이터를 전달한다.

### 산술논리연산장치
산술논리연산장치(ALU, Arithmetic Logic Unit)는 덧셈, 뺄셈 같은 두 숫자의 산술 연산과 배타적 논리합, 논리곱 같은 논리 연산을 계산하는 디지털 회로

#### CPU의 연산장치
1. `제어장치` -> `메모리` : 계산할 값을 로드 + `레지스터`에도 값 로드
2. `제어장치` -> `산술논리연상장치` : `레지스터`에 있는 값을 계산 명령 지시
3. `제어장치` -> `레지스터` -> `메모리` : 게산된 값을 `레지스터에서 메모리로` 저장

![](https://velog.velcdn.com/images/jeongeunbae/post/d5742857-9fc5-4107-a8d2-2dca00af7117/image.png)

### 인터럽트
인터럽트는 어떤 신호가 들어왔을 때 CPU를 잠깐 정지시키는 것을 말함.
- IO 디바이스로 인한 인터럽트, 0으로 숫자를 나누는 산술 연산에서의 인터럽트, 프로세스 오류 등으로 발생
- `인터럽트 발생` -> `인터럽트 벡터` -> `인터럽트 핸들러 함수` 실행

#### 하드웨어 인터럽트
하드웨어 인터럽트는 IO 디바이스에서 발생하는 인터럽트를 말함
- 인터럽트 라인이 설계된 이후 순차적인 인터럽트 실행을 중지하고 운영체제에 시스템콜을 요청해서 원하는 디바이스로 향해 디바이스 내 작은 로컬 버퍼에 접근하여 일을 수행

#### 소프트웨어 인터럽트
소프트웨어 인터럽트는 트랩(trap)이라고도 함.
- 프로세스 오류 등으로 프로세스가 시스템콜을 호출할 때 발생

### DMA 컨트롤러
DMA 컨트롤러는 I/O 디바이스가 메모리에 직접 접근할 수 있도록 하는 하드웨어 장치
- CPU 부하를 막기 위해 CPU의 일을 부담하는 `보조 일꾼`
- 하나의 작업을 CPU와 DMA 컨트롤러가 동시에 하는 것을 방지함.

### 메모리
메모리는 전자회로에서 데이터나 상태, 명령어 등을 **기록(기억)**하는 장치를 말하며, 보통 RAM(Random Access Memory)을 메모리라고도 함.

### 타이머
타이머는 몇 초 안에는 작업이 끝나야 한다는 것을 정하고 특정 프로그램에 시간 제한을 다는 역할

### 디바이스 컨트롤러
디바이스 컨트롤러는 컴퓨터와 연결되어 있는 IO 디바이스들의 **작은 CPU**를 말하고 옆에 붙어 있는 로컬 버퍼는 각 디바이스에서 데이터를 **임시로 저장하기 위한 메모리**를 뜻함.

> #### 용어 정리 💡
- **인터럽트 핸들러 함수** : 
  - 인터럽트가 발생했을 때 이를 핸들링하기 위한 함수.
  - 커널 내부의 IPQ를 통해 호출되며 `request_irq()`를 통해 인터럽트 핸들러 함수를 등록할 수 있음.
  
## Q & A ❗️❓
**Q : 운영체제의 역할은 무엇인가요?**
> **A : ** 
운영체제의 역할은 크게 네 가지로 나뉩니다.
  1. CPU 스케줄링과 프로세스 관리
  2. 메모리 관리
  3. 디스크 파일 관리
  4. I/O 디바이스 관리
